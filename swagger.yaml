openapi: 3.0.3
info:
  title: Subscription Service API
  description: API для управления подписками пользователей
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Локальный сервер
paths:
  /subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Создать подписку
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        201:
          description: Подписка успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /subscriptions/{user_id}:
    get:
      tags:
        - Subscriptions
      summary: Получить список подписок пользователя
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        200:
          description: Список подписок
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResponse'
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /subscriptions/{user_id}/{service_name}:
    get:
      tags:
        - Subscriptions
      summary: Получить информацию о подписке
      parameters:
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/ServiceName'
      responses:
        200:
          description: Информация о подписке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        404:
          description: Подписка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Subscriptions
      summary: Обновить подписку
      parameters:
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/ServiceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        200:
          description: Подписка успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Подписка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Subscriptions
      summary: Удалить подписку
      parameters:
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/ServiceName'
      responses:
        204:
          description: Подписка успешно удалена
        404:
          description: Подписка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /subscriptions/total-price:
    post:
      tags:
        - Subscriptions
      summary: Подсчитать суммарную стоимость подписок за период
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SumSubscriptionsRequest'
      responses:
        200:
          description: Суммарная стоимость
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_price:
                    type: integer
                    example: 400
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    SubscriptionRequest:
      type: object
      required:
        - service_name
        - price
        - user_id
        - start_date
      properties:
        service_name:
          type: string
          example: "Yandex Plus"
        price:
          type: integer
          example: 400
        user_id:
          type: string
          format: uuid
          example: "60601fee-2bf1-4721-ae6f-7636e79a0cba"
        start_date:
          type: string
          example: "07-2025"
          description: Формат MM-YYYY
        end_date:
          type: string
          example: "12-2025"
          description: Формат MM-YYYY (опционально)

    SubscriptionResponse:
      type: object
      properties:
        service_name:
          type: string
          example: "Yandex Plus"
        price:
          type: integer
          example: 400
        user_id:
          type: string
          format: uuid
          example: "60601fee-2bf1-4721-ae6f-7636e79a0cba"
        start_date:
          type: string
          example: "07-2025"
        end_date:
          type: string
          example: "12-2025"

    SumSubscriptionsRequest:
      type: object
      required:
        - user_id
        - start_date
        - end_date
      properties:
        user_id:
          type: string
          format: uuid
          example: "60601fee-2bf1-4721-ae6f-7636e79a0cba"
        service_name:
          type: string
          example: "Yandex Plus"
          description: Опционально
        start_date:
          type: string
          example: "01-2025"
          description: Формат MM-YYYY
        end_date:
          type: string
          example: "07-2025"
          description: Формат MM-YYYY

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "invalid user_id"

  parameters:
    UserID:
      name: user_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: UUID пользователя

    ServiceName:
      name: service_name
      in: path
      required: true
      schema:
        type: string
      description: Название сервиса
